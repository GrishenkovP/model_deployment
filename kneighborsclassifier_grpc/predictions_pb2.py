# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: predictions.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11predictions.proto\"f\n\x0ePredictRequest\x12\x14\n\x0csepal_length\x18\x01 \x01(\x02\x12\x13\n\x0bsepal_width\x18\x02 \x01(\x02\x12\x14\n\x0cpetal_length\x18\x03 \x01(\x02\x12\x13\n\x0bpetal_width\x18\x04 \x01(\x02\"$\n\x0fPredictResponse\x12\x11\n\tiris_type\x18\x01 \x01(\t2@\n\nPrediction\x12\x32\n\x0bPredictIris\x12\x0f.PredictRequest\x1a\x10.PredictResponse\"\x00\x62\x06proto3')



_PREDICTREQUEST = DESCRIPTOR.message_types_by_name['PredictRequest']
_PREDICTRESPONSE = DESCRIPTOR.message_types_by_name['PredictResponse']
PredictRequest = _reflection.GeneratedProtocolMessageType('PredictRequest', (_message.Message,), {
  'DESCRIPTOR' : _PREDICTREQUEST,
  '__module__' : 'predictions_pb2'
  # @@protoc_insertion_point(class_scope:PredictRequest)
  })
_sym_db.RegisterMessage(PredictRequest)

PredictResponse = _reflection.GeneratedProtocolMessageType('PredictResponse', (_message.Message,), {
  'DESCRIPTOR' : _PREDICTRESPONSE,
  '__module__' : 'predictions_pb2'
  # @@protoc_insertion_point(class_scope:PredictResponse)
  })
_sym_db.RegisterMessage(PredictResponse)

_PREDICTION = DESCRIPTOR.services_by_name['Prediction']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PREDICTREQUEST._serialized_start=21
  _PREDICTREQUEST._serialized_end=123
  _PREDICTRESPONSE._serialized_start=125
  _PREDICTRESPONSE._serialized_end=161
  _PREDICTION._serialized_start=163
  _PREDICTION._serialized_end=227
# @@protoc_insertion_point(module_scope)
